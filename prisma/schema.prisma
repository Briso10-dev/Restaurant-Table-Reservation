// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Models
// User table
model User {
  userID   String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  //A user receives zero/many notifications
  notification Notification[]
  //A user can do zero/one reservation
  reservation Reservation?
}
//Table model
model Table {
  tableID  String @id @default(auto()) @map("_id") @db.ObjectId
  number   Int
  capacity Int
  state    State @default(free)
  //A table is reserves zero/one  times
  reservation Reservation?
}
//Reservation table
model Reservation{
  reservationID String  @id @default(auto()) @map("_id") @db.ObjectId
  dateReservation DateTime
  hourReservation DateTime
  codeQR String? @unique //(?:Since I was first oblaged to insert codeQR in req body)
  //A reservation is connected to one table
  table_id String @unique @db.ObjectId 
  table Table @relation(fields: [table_id],references: [tableID])
  //A reservation is connected to one user
  user_id String @unique @db.ObjectId 
  user User @relation(fields: [user_id],references: [userID])
}
//Notification table
model Notification{
  notificationID String  @id @default(auto()) @map("_id") @db.ObjectId
  message String
  imageCodeQR String @unique
  //A notification is concerned with one and only one user
  userNotifID String @db.ObjectId
  userNOtif User @relation(fields: [userNotifID],references: [userID])
}

//enum list
enum State{
  free
  reserved
  occupied
}